@extends('dashboard.admin.home')
@section('title', '| Vulnerability Map')
@section('sub-content')

    <script type="text/javascript">
        // In the following example, markers appear when the user clicks on the map.
        // The markers are stored in an array.
        // The user can then click an option to hide, show or delete the markers.
        let map;
        let markers = [];

        //values from database
        var storedLocations = [
            @foreach ($coordinates as $coordinate)
                ["{{ $coordinate->vulArea_lat }}","{{ $coordinate->vulArea_lng }}", "{{ $coordinate->degree }}",
                "{{ $coordinate->id }}" , "{{ $coordinate->brgy_loc }}"],
            @endforeach
        ];

        function initMap() {
            const brgySantolan = {
                lat: 14.6131,
                lng: 121.0880,
            };

            map = new google.maps.Map(document.getElementById("map"), {
                zoom: 16,
                center: brgySantolan,

            });
            var infoWindow = new google.maps.InfoWindow();

            //icons for degree
            var red_circle = new google.maps.Marker({
                path: google.maps.SymbolPath.CIRCLE,
                scale: 90,
                fillColor: "#F00",
                fillOpacity: 0.4,
                strokeWeight: 0.4,
            });

            var orange_circle = new google.maps.Marker({
                path: google.maps.SymbolPath.CIRCLE,
                scale: 90,
                fillColor: "#FFA500",
                fillOpacity: 0.4,
                strokeWeight: 0.4,
            });


            //loop coordinates from database
            for (var i = 0; i < storedLocations.length; i++) {
                var data = storedLocations[i]
                var location = new google.maps.LatLng(data[0], data[1]);
                let id = data[3];

                $('#id').val(id);
                @if (Auth::user()->user_role === 1)
                    var marker = new google.maps.Marker({
                    position: location,
                    map: map,
                    icon: data[2] == "H" ? red_circle : orange_circle,
                    html:'Barangay:' + data[4] + '<br>' +
                    '<form action="/admin/vulnerabilitymap/' + data[3] + '" method="post">' +
                        '@csrf' +
                        '@method("DELETE")' +
                        '<input class="btn btn-danger mt-2 btn-sm" type="submit" value="Delete Marker" onclick="showSuccess()">' +
                        '</form>',
                    });
                @endif
                @if (Auth::user()->user_role === 3)
                    var marker = new google.maps.Marker({
                    position: location,
                    map: map,
                    icon: data[2] == "H" ? red_circle : orange_circle,
                    html: 'Barangay: ' + data[4] + '<br>' +
                    '<form action="/brgy_official/vulnerabilitymap/' + data[3] + '" method="post">' +
                        '@csrf' +
                        '@method("DELETE")' +
                        '<input class="btn btn-danger mt-2 btn-sm" type="submit" value="Delete Marker" onclick="showSuccess()">' +
                        '</form>',
                    });
                @endif

                    (function(marker, data) {
                        google.maps.event.addListener(marker, "click", function(e) {
                            infoWindow.setContent(marker.html);
                            infoWindow.open(map, marker);
                        });
                    })(marker, data);

            }


            // This event listener will call addMarker() when the map is clicked.

            var degreeBtn = document.getElementsByName('degree');

            map.addListener("click", (event) => {
                if (!(degreeBtn[0].checked || degreeBtn[1].checked)) {
                    swal({
                        title: "Warning!",
                        text: "Please choose the degree first!",
                        icon: "warning",
                    });
                } else {
                    addMarker(event.latLng);
                }

            });

            // Adds a marker at the center of the map.
            addMarker();

        }

        // Adds a marker to the map and push to the array.
        function addMarker(position) {
            const marker = new google.maps.Marker({
                position,
                map,
                icon: {
                    path: google.maps.SymbolPath.CIRCLE,
                    scale: 90,
                    fillColor: "#808080",
                    fillOpacity: 0.4,
                    strokeWeight: 0.4,
                },
            });

            markers.push(marker);

            let vulArea_lat = position.lat();
            let vulArea_lng = position.lng();

            $('#vulArea_lat').val(vulArea_lat);
            $('#vulArea_lng').val(vulArea_lng);
            submitForm(form);
        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (let i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function hideMarkers() {
            setMapOnAll(null);
        }

        function showSuccess() {
            swal("Success!", "The marker has been deleted!", "success");
        }

        //submits the data
        function submitForm(form) {
            event.preventDefault();
            swal({
                    title: "Are you sure?",
                    text: "Once confirmed, this will be tagged as vulnerable area.",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                    closeOnClickOutside: false,
                    closeOnEsc: false,
                })
                .then((isOkay) => {
                    if (isOkay) {
                        form.submit();
                        swal("The map has been updated.", {
                            icon: "success",
                            timer: 3000,
                        });
                    } else {
                        hideMarkers();
                    }
                });
            return false;
        }

        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }
    </script>

    <div class="col-xl-10 col-lg-9 col-md-8 mt-3">

        <h3 class="mb-3">Vulnerability Map</h3>

        @if (Auth::user()->user_role === 1)
            <form class="needs-validation mb-3" novalidate action="{{ route('admin.vulnerabilitymap.store') }}"
                method="POST" id="form">
            @elseif (Auth::user()->user_role === 3)
                <form class="needs-validation mb-3" novalidate action="{{ route('brgy_official.vulnerabilitymap.store') }}"
                    method="POST" id="form">
        @endif
        @csrf


        <p class="vul-caption">Choose the degree of vulnerability in the area:</p>
        <div class="radio-button-wrap mt-2">
            <input type="radio" name="degree" id="degreeHigh" value="H" hidden>
            <label for="degreeHigh" class="button-label">High</label>
            <input type="radio" name="degree" id="degreeMedium" value="M" hidden>
            <label for="degreeMedium" class="button-label">Medium</label>
        </div>

        <div class="row">
            <div class="col">
                @if (Auth::user()->user_role === 3)
                    <input type="text" class="form-control" placeholder="{{ Auth::user()->brgy_loc }}" id="barangay"
                        name="brgy_loc" value="{{ Auth::user()->brgy_loc }}" hidden>
                @endif
                @if (Auth::user()->user_role === 1)
                    <label for="inputBrgy">Barangay</label>
                    <select id="inputBrgy" class="form-control" name="brgy_loc" value="{{ old('barangay') }}">
                        <option disabled>Barangay</option>
                        <option selected value='Barangay Dela Paz'>Barangay Dela Paz</option>
                        <option value='Barangay Manggahan'>Barangay Manggahan</option>
                        <option value='Barangay Maybunga'>Barangay Maybunga</option>
                        <option value='Barangay Rosario'>Barangay Rosario</option>
                        <option value='Barangay Santolan'>Barangay Santolan</option>
                    </select>
                @endif
            </div>
            <div class="col">
                <input type="text" class="form-control" placeholder="Latitude" id="vulArea_lat" name="vulArea_lat" hidden>
            </div>
            <div class="col">
                <input type="text" class="form-control" placeholder="Longitude" id="vulArea_lng" name="vulArea_lng"
                    hidden>
            </div>
        </div>
        </form>
        <div class="card shadow-card mb-5">
            <div class="card-body">
                <div id="map" style="height: 600px; width: 100%;"></div>
            </div>
        </div>

    </div>


    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBOhN8Ve4h6uAEKm4Kh_2eznLfx0GIbOTo&callback=initMap">
    </script>
@endsection
